{
  "name": "x-root-path",
  "version": "0.0.2",
  "description": "A helper to help you find the project root directory",
  "main": "index.js",
  "scripts": {
    "test": "npm test"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/wangchi/x-root-path.git"
  },
  "keywords": [
    "require",
    "path",
    "require",
    "root",
    "path",
    "root",
    "path"
  ],
  "author": {
    "name": "WalkerBe"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/wangchi/x-root-path/issues"
  },
  "homepage": "https://github.com/wangchi/x-root-path#readme",
  "readme": "# x-root-path\nA helper to help you find the project root directory\n\nIn our node project, we may need require many modules in a file, and we will find many `../` in the file. Now you can use the x-root-path module to solve the problem.\n\n## Install\n\n```\nnpm install x-root-path\n```\n\n## Use in project\n\nExample:\n\nThere is some files in a project:\n\n```\n// Files:\n// Project/lib/lib1.js\n// Project/module/m1.js\n// Project/view/test/test1.js\n```\n\n\nThe test1.js is like this:\n\n```\nvar lib1 = require('../../../lib/lib1');\nvar m1 = require('../../../module/m1');\n\n// do something\n```\n\nWe will find there is too many '../' in the test1.js file. But we can solve the problem after we use the x-root-path module.\n\nNow we can write test1.js like this:\n\n```\nvar ROOT_PATH = require('x-root-path');\n\nvar lib1 = require( ROOT_PATH + '/lib/lib1' );\nvar m1 = require( ROOT_PATH + '/module/m1' );\n\n// do something\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "_id": "x-root-path@0.0.2",
  "_from": "x-root-path@latest"
}
